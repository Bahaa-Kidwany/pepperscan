import { createContext, useState, useContext } from "react";

const DataContext = createContext();

const Context = ({ children }) => {
  const [formState, setFormState] = useState({
    url: "",
    status: "",
    output: 0,
    loading: false,
    scanContent: {
      infected: [
        "فى حالة إصابة محصول الفلفل الخاص بك بالبقع البكتيرية وقمت بتحديدها فى مراحلها الاولى باستخدام التطبيق أو بأى طريقة أخرى يمكنك القيام بالتالى",
        "قم بإزالة الأجزاء المصابة من النبات وتخلص منها. إذا تأثر جزء صغير فقط من البنات. قم بتقليمه بعيدا",
        "رش بمبيد فطرى عضوى فى المحلول الموجه. يمكن ان تساعد فى منع إنتشار المرض عن طريق قتل الجراثيم . ملحوظة, كن حذرا مع مبيدات الفطريات النحاسية - لاتضعها على بشرتك لأنها قد تسبب حروقا",
        "قم بتدوير محاصيل الفلفل فى مكان مختلف كل عام لمنع الجراثيم من التراكم بأعداد كبيرة",
        "كن دائما نظيفا قبل التوجه إلى الصوبة لتجنب انتشار الجراثيم من نبات الى أخر. أيضا , قم بالرى فى قاع النبات لتجنب الماء من الجلوس على الأوراق",
      ],
      nonInfected: [
        "مرض البقع البكتيرية هو من أكثر الامراض شيوعا فى محصول الفلفل بشكل خاص",
        "تتطور البقع البكتيرية بسرعة أكبر خلال فترات درجات الحرارة الدافئة والظروف الرطبة الطويلة يتطور المرض بسبب الرطوبة النسبية التى تزيد عن 85% وفترات طويلة من رطوبة الأوراق وموجات الحرارة خاصة عندما تظل درجات الحرارة ليلا فوق 21 درجة مئوية",
        "فترات قصيرة (ثلاثة أيام أو اكثر) أقل من 40% من الرطوبة النسبية ستقلل من شدة المرضة وتؤخر تطوره. فترات طويلة من انخفاض الرطوبة (على الأقل ثلاثة أسابيع) توقفه بشكل لا رجعة فيه حتى لو عادت الظروف الرطبة السابقة",
        "تحدث العدوى فى الغالب بسبب البذور الملوثة حتى البذور المجففة المصابة التى تم تخزينها فى البرد لمدة 10 سنوات يمكن أن تنتج نباتات تظهر عليها أعراض البقع البكتيرية . لذلك, تشكل البذور وسيلة مهمة للبقاء وانتشار العامل الممرض",
        "يمكن ان تتحرك البكتيريا داخل الحقول عن طريق الأمطار التى تحكرها الرياح وقطرات الرى والهباء الجوى والتعامل مع النباتات الرطبة. كلما طالت فترة رطوبة النباتات. زادت فرصة الإصابة",
      ],
    },
  });
  return (
    <DataContext.Provider
      value={{
        formState,
        setFormState,
      }}
    >
      {children}
    </DataContext.Provider>
  );
};

// Custom Hook
export const useGlobalContext = () => {
  return useContext(DataContext);
};

export { Context, DataContext };
